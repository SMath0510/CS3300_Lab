MAIN
// PRINT STMT: var: TEMP 0
// MESSAGE SEND: obj: TEMP 1 objVtable: TEMP 2
// ALLOCATION EXPR: className: A vtable: TEMP 3
// ALLOCATION EXPR: classSize: 16 vtableSize: 12
MOVE TEMP 3 HALLOCATE 12
MOVE TEMP 4 A_one
HSTORE TEMP 3 0 TEMP 4
MOVE TEMP 5 A_run
HSTORE TEMP 3 4 TEMP 5
MOVE TEMP 6 A_set
HSTORE TEMP 3 8 TEMP 6
MOVE TEMP 7 HALLOCATE 16
HSTORE TEMP 7 0 TEMP 3
MOVE TEMP 8 4
MOVE TEMP 9 0
MOVE TEMP 10 4
MOVE TEMP 12 16
MOVE TEMP 11 MINUS TEMP 12 1
L0
NOOP
MOVE TEMP 13 LE TEMP 10 TEMP 11
CJUMP TEMP 13 L1
MOVE TEMP 14 PLUS TEMP 7 TEMP 10
HSTORE TEMP 14 0 TEMP 9
MOVE TEMP 15 PLUS TEMP 10 4
MOVE TEMP 10 TEMP 15
JUMP L0
L1 NOOP
MOVE TEMP 1 TEMP 7
HLOAD TEMP 2 TEMP 1 0
MOVE TEMP 16 1
MOVE TEMP 17 0
// Calling : method: one objClass: A methodOffset: 0
HLOAD TEMP 18 TEMP 2 0
MOVE TEMP 0 CALL TEMP 18 ( TEMP 1 TEMP 16 TEMP 17 )
PRINT TEMP 0
END
A_run [3]
BEGIN
// ASSIGN STMT: id: res expr: TEMP 4
MOVE TEMP 4 0
MOVE TEMP 3 TEMP 4
// IF THEN ELSE STMT: expr: TEMP 5 label1: L2 label2: L3
// COMPARE EXPR: lexp: TEMP 6 rexp: TEMP 7
MOVE TEMP 6 TEMP 1
MOVE TEMP 7 TEMP 2
MOVE TEMP 5 LE TEMP 6 TEMP 7
CJUMP TEMP 5 L2
// ASSIGN STMT: id: res expr: TEMP 8
MOVE TEMP 8 TEMP 1
MOVE TEMP 3 TEMP 8
// id old type: int expr type: int
JUMP L3
L2 NOOP
// ASSIGN STMT: id: res expr: TEMP 9
MOVE TEMP 9 TEMP 2
MOVE TEMP 3 TEMP 9
// id old type: int expr type: int
L3 NOOP
// ASSIGN STMT: id: x1 expr: TEMP 10
// AND EXPR: lexp: TEMP 11 rexp: TEMP 12
// OR EXPR: lexp: TEMP 15 rexp: TEMP 16
// AND EXPR: lexp: TEMP 18 rexp: TEMP 19
MOVE TEMP 18 1
MOVE TEMP 20 0
MOVE TEMP 21 NE TEMP 18 TEMP 20
CJUMP TEMP 21 L4
MOVE TEMP 19 1
MOVE TEMP 21 NE TEMP 19 TEMP 20
CJUMP TEMP 21 L4
MOVE TEMP 17 1
JUMP L5
L4
MOVE TEMP 17 0
L5
NOOP
MOVE TEMP 15 TEMP 17
MOVE TEMP 22 1
MOVE TEMP 23 NE TEMP 15 TEMP 22
CJUMP TEMP 23 L6
// AND EXPR: lexp: TEMP 25 rexp: TEMP 26
MOVE TEMP 25 1
MOVE TEMP 27 0
MOVE TEMP 28 NE TEMP 25 TEMP 27
CJUMP TEMP 28 L8
MOVE TEMP 26 0
MOVE TEMP 28 NE TEMP 26 TEMP 27
CJUMP TEMP 28 L8
MOVE TEMP 24 1
JUMP L9
L8
MOVE TEMP 24 0
L9
NOOP
MOVE TEMP 16 TEMP 24
MOVE TEMP 23 NE TEMP 16 TEMP 22
CJUMP TEMP 23 L6
MOVE TEMP 14 0
JUMP L7
L6
MOVE TEMP 14 1
L7
NOOP
MOVE TEMP 13 TEMP 14
MOVE TEMP 11 TEMP 13
MOVE TEMP 29 0
MOVE TEMP 30 NE TEMP 11 TEMP 29
CJUMP TEMP 30 L10
MOVE TEMP 12 0
MOVE TEMP 30 NE TEMP 12 TEMP 29
CJUMP TEMP 30 L10
MOVE TEMP 10 1
JUMP L11
L10
MOVE TEMP 10 0
L11
NOOP
HSTORE TEMP 0 12 TEMP 10
// IF THEN STMT: expr: TEMP 31 label: L12
// AND EXPR: lexp: TEMP 32 rexp: TEMP 33
// OR EXPR: lexp: TEMP 36 rexp: TEMP 37
// AND EXPR: lexp: TEMP 39 rexp: TEMP 40
MOVE TEMP 39 1
MOVE TEMP 41 0
MOVE TEMP 42 NE TEMP 39 TEMP 41
CJUMP TEMP 42 L13
MOVE TEMP 40 1
MOVE TEMP 42 NE TEMP 40 TEMP 41
CJUMP TEMP 42 L13
MOVE TEMP 38 1
JUMP L14
L13
MOVE TEMP 38 0
L14
NOOP
MOVE TEMP 36 TEMP 38
MOVE TEMP 43 1
MOVE TEMP 44 NE TEMP 36 TEMP 43
CJUMP TEMP 44 L15
// AND EXPR: lexp: TEMP 46 rexp: TEMP 47
MOVE TEMP 46 1
MOVE TEMP 48 0
MOVE TEMP 49 NE TEMP 46 TEMP 48
CJUMP TEMP 49 L17
MOVE TEMP 47 0
MOVE TEMP 49 NE TEMP 47 TEMP 48
CJUMP TEMP 49 L17
MOVE TEMP 45 1
JUMP L18
L17
MOVE TEMP 45 0
L18
NOOP
MOVE TEMP 37 TEMP 45
MOVE TEMP 44 NE TEMP 37 TEMP 43
CJUMP TEMP 44 L15
MOVE TEMP 35 0
JUMP L16
L15
MOVE TEMP 35 1
L16
NOOP
MOVE TEMP 34 TEMP 35
MOVE TEMP 32 TEMP 34
MOVE TEMP 50 0
MOVE TEMP 51 NE TEMP 32 TEMP 50
CJUMP TEMP 51 L19
MOVE TEMP 33 0
MOVE TEMP 51 NE TEMP 33 TEMP 50
CJUMP TEMP 51 L19
MOVE TEMP 31 1
JUMP L20
L19
MOVE TEMP 31 0
L20
NOOP
CJUMP TEMP 31 L12
// ASSIGN STMT: id: x2 expr: TEMP 52
HLOAD TEMP 52 TEMP 0 12
HSTORE TEMP 0 8 TEMP 52
// id old type: null expr type: boolean
L12
NOOP
MOVE TEMP 53 TEMP 3
RETURN TEMP 53
END
A_one [3]
BEGIN
// ASSIGN STMT: id: x1 expr: TEMP 3
MOVE TEMP 3 TEMP 1
HSTORE TEMP 0 12 TEMP 3
// id old type: null expr type: boolean
// ASSIGN STMT: id: x2 expr: TEMP 4
MOVE TEMP 4 TEMP 2
HSTORE TEMP 0 8 TEMP 4
// id old type: null expr type: boolean
// IF THEN STMT: expr: TEMP 5 label: L21
// AND EXPR: lexp: TEMP 6 rexp: TEMP 7
HLOAD TEMP 6 TEMP 0 12
MOVE TEMP 8 0
MOVE TEMP 9 NE TEMP 6 TEMP 8
CJUMP TEMP 9 L22
HLOAD TEMP 7 TEMP 0 8
MOVE TEMP 9 NE TEMP 7 TEMP 8
CJUMP TEMP 9 L22
MOVE TEMP 5 1
JUMP L23
L22
MOVE TEMP 5 0
L23
NOOP
CJUMP TEMP 5 L21
// PRINT STMT: var: TEMP 10
MOVE TEMP 10 999
PRINT TEMP 10
L21
NOOP
// IF THEN ELSE STMT: expr: TEMP 11 label1: L24 label2: L25
// OR EXPR: lexp: TEMP 14 rexp: TEMP 15
HLOAD TEMP 14 TEMP 0 12
MOVE TEMP 16 1
MOVE TEMP 17 NE TEMP 14 TEMP 16
CJUMP TEMP 17 L26
HLOAD TEMP 15 TEMP 0 8
MOVE TEMP 17 NE TEMP 15 TEMP 16
CJUMP TEMP 17 L26
MOVE TEMP 13 0
JUMP L27
L26
MOVE TEMP 13 1
L27
NOOP
MOVE TEMP 12 TEMP 13
MOVE TEMP 18 1
MOVE TEMP 11 MINUS TEMP 18 TEMP 12
CJUMP TEMP 11 L24
// PRINT STMT: var: TEMP 19
MOVE TEMP 19 888
PRINT TEMP 19
JUMP L25
L24 NOOP
// PRINT STMT: var: TEMP 20
MOVE TEMP 20 333
PRINT TEMP 20
L25 NOOP
// IF THEN STMT: expr: TEMP 21 label: L28
// OR EXPR: lexp: TEMP 22 rexp: TEMP 23
// AND EXPR: lexp: TEMP 27 rexp: TEMP 28
HLOAD TEMP 27 TEMP 0 12
MOVE TEMP 29 0
MOVE TEMP 30 NE TEMP 27 TEMP 29
CJUMP TEMP 30 L29
HLOAD TEMP 28 TEMP 0 8
MOVE TEMP 30 NE TEMP 28 TEMP 29
CJUMP TEMP 30 L29
MOVE TEMP 26 1
JUMP L30
L29
MOVE TEMP 26 0
L30
NOOP
MOVE TEMP 25 TEMP 26
MOVE TEMP 31 1
MOVE TEMP 24 MINUS TEMP 31 TEMP 25
MOVE TEMP 22 TEMP 24
MOVE TEMP 32 1
MOVE TEMP 33 NE TEMP 22 TEMP 32
CJUMP TEMP 33 L31
// OR EXPR: lexp: TEMP 35 rexp: TEMP 36
HLOAD TEMP 35 TEMP 0 8
MOVE TEMP 37 1
MOVE TEMP 38 NE TEMP 35 TEMP 37
CJUMP TEMP 38 L33
HLOAD TEMP 36 TEMP 0 12
MOVE TEMP 38 NE TEMP 36 TEMP 37
CJUMP TEMP 38 L33
MOVE TEMP 34 0
JUMP L34
L33
MOVE TEMP 34 1
L34
NOOP
MOVE TEMP 23 TEMP 34
MOVE TEMP 33 NE TEMP 23 TEMP 32
CJUMP TEMP 33 L31
MOVE TEMP 21 0
JUMP L32
L31
MOVE TEMP 21 1
L32
NOOP
CJUMP TEMP 21 L28
// ASSIGN STMT: id: x expr: TEMP 39
MOVE TEMP 39 1
HSTORE TEMP 0 4 TEMP 39
L28
NOOP
// IF THEN STMT: expr: TEMP 40 label: L35
// AND EXPR: lexp: TEMP 41 rexp: TEMP 42
HLOAD TEMP 41 TEMP 0 12
MOVE TEMP 43 0
MOVE TEMP 44 NE TEMP 41 TEMP 43
CJUMP TEMP 44 L36
// AND EXPR: lexp: TEMP 46 rexp: TEMP 47
HLOAD TEMP 46 TEMP 0 12
MOVE TEMP 48 0
MOVE TEMP 49 NE TEMP 46 TEMP 48
CJUMP TEMP 49 L38
HLOAD TEMP 47 TEMP 0 8
MOVE TEMP 49 NE TEMP 47 TEMP 48
CJUMP TEMP 49 L38
MOVE TEMP 45 1
JUMP L39
L38
MOVE TEMP 45 0
L39
NOOP
MOVE TEMP 42 TEMP 45
MOVE TEMP 44 NE TEMP 42 TEMP 43
CJUMP TEMP 44 L36
MOVE TEMP 40 1
JUMP L37
L36
MOVE TEMP 40 0
L37
NOOP
CJUMP TEMP 40 L35
// ASSIGN STMT: id: x expr: TEMP 50
MOVE TEMP 50 1
HSTORE TEMP 0 4 TEMP 50
L35
NOOP
// ADD EXPR: lexp: TEMP 52 rexp: TEMP 53
HLOAD TEMP 52 TEMP 0 4
MOVE TEMP 53 11
MOVE TEMP 51 PLUS TEMP 52 TEMP 53
RETURN TEMP 51
END
A_set [2]
BEGIN
// ASSIGN STMT: id: x expr: TEMP 2
MOVE TEMP 2 TEMP 1
HSTORE TEMP 0 4 TEMP 2
// id old type: null expr type: int
MOVE TEMP 3 0
RETURN TEMP 3
END
